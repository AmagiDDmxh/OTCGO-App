{"version":3,"sources":["../../src/components/modals/send-modal/send-modal.module.ts","../../src/components/modals/send-modal/send-modal.ts","../../src/components/modals/send-modal/send-modal.validators.ts"],"names":[],"mappings":"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","file":"13.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core'\r\nimport { SendModalComponent } from './send-modal'\r\nimport { NgModule } from '@angular/core'\r\nimport { IonicPageModule } from 'ionic-angular'\r\n\r\n\r\nconst COMPONENTS = [\r\n  SendModalComponent\r\n]\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [\r\n\t\tTranslateModule.forChild(),\r\n    IonicPageModule.forChild(SendModalComponent),\r\n  ],\r\n  exports: COMPONENTS\r\n})\r\nexport class SendModalModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modals/send-modal/send-modal.module.ts","import {\r\n\tComponent,\r\n\tOnInit\r\n} from '@angular/core'\r\nimport {\r\n\tAlertController,\r\n\tIonicPage,\r\n\tLoadingController,\r\n\tNavController,\r\n\tViewController\r\n} from 'ionic-angular'\r\nimport { BarcodeScanner, BarcodeScanResult } from '@ionic-native/barcode-scanner'\r\nimport { Store } from '@ngrx/store'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\nimport {\r\n\taddressValidator,\r\n\tamountValidator\r\n} from './send-modal.validators'\r\n\r\nimport { RootState } from '../../../store/reducers'\r\nimport { IBalance } from '../../../shared/models'\r\nimport { isAddress } from '../../../shared/utils'\r\nimport { SendModalProvider } from './send-modal.provider'\r\nimport { NotificationProvider } from '../../../providers'\r\nimport { TransactionsActions, BalancesActions } from '../../../store/actions'\r\nimport { TransactionsSelectors, BalancesSelectors } from '../../../store/selectors'\r\n\r\n\r\n@IonicPage({\r\n\tname: 'SendModal'\r\n})\r\n@Component({\r\n\tselector: 'send-modal',\r\n\ttemplateUrl: 'send-modal.html'\r\n})\r\nexport class SendModalComponent implements OnInit {\r\n\tformGroup: FormGroup\r\n\tselectedBalance: IBalance\r\n\ttranslationPrefix = 'POSSESSIONS.SEND_MODAL.'\r\n\r\n\tget toAddress () { return this.formGroup.get('address') }\r\n\tget passphrase () { return this.formGroup.get('passphrase') }\r\n\tget amount () { return this.formGroup.get('amount') }\r\n\tget label () { return this.formGroup.get('label') }\r\n\tget w () {\r\n\t\ttry {\r\n\t\t\treturn this.sendModalProvider.account && this.sendModalProvider.account.WIF\r\n\t\t} catch (e) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor (\r\n\t\tpublic viewCtrl: ViewController,\r\n\t\tprivate navCtrl: NavController,\r\n\t\tprivate barcodeScanner: BarcodeScanner,\r\n\t\tprivate notificationProvider: NotificationProvider,\r\n\t\tprivate alertCtrl: AlertController,\r\n\t\tprivate loadingCtrl: LoadingController,\r\n\t\tpublic sendModalProvider: SendModalProvider,\r\n\t\tprivate store: Store<RootState>,\r\n\t\tprivate fb: FormBuilder\r\n\t) {\r\n\t\tthis.store.select(BalancesSelectors.getSelectedBalance).subscribe(selectedBalance => this.selectedBalance = selectedBalance)\r\n\t\tthis.formGroup = this.fb.group({\r\n\t\t\taddress: ['', [Validators.required, addressValidator]],\r\n\t\t\tpassphrase: ['', this.w ? [] : Validators.required],\r\n\t\t\tamount: ['', [Validators.required, amountValidator(this.selectedBalance.amount)]],\r\n\t\t\tlabel: [''],\r\n\t\t})\r\n\t}\r\n\r\n\tngOnInit (): void {\r\n\t}\r\n\r\n\tionViewWillEnter () {\r\n\t\tthis.store.select(TransactionsSelectors.getSelectedAddress).take(1).subscribe(address => this.toAddress.setValue(address))\r\n\t}\r\n\r\n\tionViewDidLeave () {\r\n\t\tthis.store.dispatch(new TransactionsActions.CleanSelectedContact())\r\n\t}\r\n\r\n\thandleClose () {\r\n\t\tthis.viewCtrl.dismiss()\r\n\t\tthis.formGroup.reset()\r\n\t}\r\n\r\n\t/**\r\n\t * Address must be check validity and required\r\n\t * @if address && isAddress(address)\r\n\t * @then passphrase been use for signature the wallet file is require\r\n\t * @then amount is required and translate to big num\r\n\t * @optional Label\r\n\t **/\r\n\tasync transfer () {\r\n\t\tthis.toAddress.markAsTouched()\r\n\t\tthis.passphrase.markAsTouched()\r\n\t\tthis.amount.markAsTouched()\r\n\r\n\t\tif (!this.formGroup.valid ||\r\n\t\t\t!this.toAddress.valid ||\r\n\t\t\t!this.amount.valid ||\r\n\t\t\t!this.passphrase.valid) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst loading = this.loadingCtrl.create()\r\n\t\tawait loading.present()\r\n\t\t\r\n\r\n\t\tthis.sendModalProvider\r\n\t\t    .decrypt(this.passphrase.value)\r\n\t\t    .then(async pr => {\r\n\t\t\t    const result = await this.sendModalProvider.doSendAsset({\r\n\t\t\t\t    dests: this.toAddress.value,\r\n\t\t\t\t    amounts: this.amount.value,\r\n\t\t\t\t    assetId: this.selectedBalance.hash\r\n\t\t\t    }, pr)\r\n\t\t\t    if (result) {\r\n\t\t\t\t    await this.handleClose()\r\n\t\t\t\t    this.notificationProvider.emit({ message: '转账成功' })\r\n\t\t\t    }\r\n\t\t    })\r\n\t\t    .catch(err => {\r\n\t\t    \tif (err.message)\r\n\t\t\t\t\t\treturn this.showPrompt({ message: err.message, title: '错误' })\r\n\t\t\t\t\tthis.showPrompt({ message: err, title: '错误' })\r\n\t\t\t\t})\r\n\t\t    .then(_=> {\r\n\t\t    \tthis.store.dispatch(new BalancesActions.Load())\r\n\t\t\t\t\tthis.store.dispatch(new TransactionsActions.CleanSelectedContact())\r\n\t\t\t\t\tloading.dismissAll()\r\n\t\t    })\r\n\t}\r\n\r\n\tshowPrompt (config) {\r\n\t\tconst prompt = this.alertCtrl.create(config)\r\n\t\tprompt.present()\r\n\t}\r\n\r\n\thandleScanClick () {\r\n\t\tthis.barcodeScanner.scan()\r\n\t\t\t\t.then((data: BarcodeScanResult) => isAddress(data.text) && this.toAddress.setValue(data.text))\r\n\t\t    .catch(err => this.notificationProvider.emit({ message: err }))\r\n\t}\r\n\r\n\thandleContactClick () {\r\n\t\tthis.navCtrl.push('Contacts', { fromProfile: false })\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modals/send-modal/send-modal.ts","import { FormControl, ValidationErrors } from '@angular/forms'\r\nimport { isAddress } from '../../../shared/utils'\r\n\r\nexport function addressValidator (addressCtrl: FormControl): ValidationErrors {\r\n\tconst { value } = addressCtrl\r\n\treturn (!value || !isAddress(value))\r\n\t\t? { invalidAddress: true }\r\n\t\t: null\r\n}\r\n\r\nexport function amountValidator (maxValue) {\r\n\treturn (amountCtrl: FormControl): ValidationErrors | null => {\r\n\t\tconst value = amountCtrl.value\r\n\t\tif (!value || value <= 0 || value > maxValue) {\r\n\t\t\treturn { invalidAmount: true }\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/modals/send-modal/send-modal.validators.ts"],"sourceRoot":""}
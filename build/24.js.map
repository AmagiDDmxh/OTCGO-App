{"version":3,"sources":["../../src/containers/markets/markets.module.ts","../../src/containers/markets/markets.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAwC;AACO;AACR;AACc;AAErD,IAAM,UAAU,GAAG;IAClB,6DAAW;CACX;AAUD;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,uEAAQ,CAAC;YACT,YAAY,EAAE,UAAU;YACxB,OAAO,EAAE;gBACR,4EAAe,CAAC,QAAQ,EAAE;gBAC1B,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACrC;YACD,OAAO,EAAE,UAAU;SACnB,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmB;AACd;AACgC;AAGmB;AAElC;AACwC;AAO5F;IAMC,qBACQ,OAAsB,EACtB,SAAoB,EACnB,aAA4B,EAC5B,EAAwB,EACxB,EAAmB,EACnB,KAAuB;QALxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAsB;QACxB,OAAE,GAAF,EAAE,CAAiB;QACnB,UAAK,GAAL,KAAK,CAAkB;IAC7B,CAAC;IAEJ,8BAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,EAAE;IAChB,CAAC;IAEK,8BAAQ,GAAd;;;;gBACC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAhC,CAAgC,CAAC;gBACjG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAgB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAArB,CAAqB,CAAC;gBAC1F,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAgB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,KAAK,GAAG,OAAO,EAApB,CAAoB,CAAC;gBAC1F,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,SAAS,GAAG,QAAQ,EAAzB,CAAyB,CAAC;gBACjG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAe,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAlC,CAAkC,CAAC;;;;KAItG;IAED,+BAAS,GAAT,UAAW,SAAoB;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAAc,CAAC,IAAI,EAAE,CAAC;QAE9C;;mEAEqD;QAErD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAgB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,iBAAO,IAAI,QAAC,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAhC,CAAgC,CAAC;IACtG,CAAC;IAED,qCAAe,GAAf,UAAiB,IAAI;QACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAAc,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,QAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IACvF,CAAC;IA3CW,WAAW;QAJvB,wEAAS,CAAC;YACV,QAAQ,EAAE,cAAc;WACG;SAC3B,CAAC;6EAQ6B;YACX,iEAAS;YACJ,wEAAa;YACxB,oEAAoB;YACpB,4DAAe;YACZ,KAAK;OAZT,WAAW,CA4DvB;IAAD,CAAC;AAAA;SA5DY,WAAW,e","file":"24.js","sourcesContent":["import { NgModule } from '@angular/core'\r\nimport { IonicPageModule } from 'ionic-angular'\r\nimport { MarketsPage } from './markets'\r\nimport { TranslateModule } from '@ngx-translate/core'\r\n\r\nconst COMPONENTS = [\r\n\tMarketsPage\r\n]\r\n\r\n@NgModule({\r\n\tdeclarations: COMPONENTS,\r\n\timports: [\r\n\t\tTranslateModule.forChild(),\r\n\t\tIonicPageModule.forChild(MarketsPage),\r\n\t],\r\n\texports: COMPONENTS\r\n})\r\nexport class MarketsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/markets/markets.module.ts","import { Component, OnInit } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport {\n\tIonicPage, NavController, NavParams, Refresher\n} from 'ionic-angular'\n\nimport { RootState } from '../../store/reducers'\nimport { PriceProvider, NotificationProvider, LoadingProvider } from '../../providers'\n\nimport { MarketsActions } from '../../store/actions'\nimport { SettingsSelectors, MarketsSelectors, PricesSelectors } from '../../store/selectors'\n\n@IonicPage({ name: 'Markets' })\n@Component({\n\tselector: 'page-markets',\n\ttemplateUrl: 'markets.html',\n})\nexport class MarketsPage implements OnInit {\n\tcoins\n\tGASPrice\n\texchangeRates\n\toCurrency\n\n\tconstructor (\n\t\tpublic navCtrl: NavController,\n\t\tpublic navParams: NavParams,\n\t\tprivate priceProvider: PriceProvider,\n\t\tprivate np: NotificationProvider,\n\t\tprivate lp: LoadingProvider,\n\t\tprivate store: Store<RootState>\n\t) {}\n\n\tngOnInit () {\n\t\tthis.initData()\n\t}\n\n\tasync initData () {\n\t\tthis.store.select(MarketsSelectors.getError).subscribe(error => this.np.emit({ message: error }))\n\t\tthis.store.select(MarketsSelectors.getLoading).subscribe(loading => this.lp.emit(loading))\n\t\tthis.store.select(MarketsSelectors.getEntities).subscribe(markets => this.coins = markets)\n\t\tthis.store.select(SettingsSelectors.getCurrency).subscribe(currency => this.oCurrency = currency)\n\t\tthis.store.select(PricesSelectors.getEntities).subscribe(prices => this.GASPrice = prices['GAS'] || 1)\n\n\t\t/* TODO: \"This API endpoint is deprecated and will stop working on June 1st, 2018. For more information please visit: https://github.com/fixerAPI/fixer#readme\" */\n\t\t// this.priceProvider.getExchangeRates().then(res => this.exchangeRates = res['rates']).catch(console.log)\n\t}\n\n\tdoRefresh (refresher: Refresher) {\n\t\tthis.store.dispatch(new MarketsActions.Load())\n\n\t\t/*this.priceProvider.getExchangeRates()\n\t\t\t\t.then(res => this.exchangeRates = res['rates'])\n\t\t\t\t.catch(error => this.np.emit({ message: error }))*/\n\n\t\tthis.store.select(MarketsSelectors.getLoading).subscribe(loading => !loading && refresher.complete())\n\t}\n\n\thandleCoinClick (coin) {\n\t\tthis.store.dispatch(new MarketsActions.Select(coin.symbol))\n\t\tthis.navCtrl.push('MarketDetail', { coin, perGas: this.GASPrice / coin.currentPrice })\n\t}\n\n\t// TODO: Unuse function\n\t/*calculateRate (price: number) {\n\t\tconst strPrice = (price / this.GASPrice).toString()\n\n\t\tconst splitStr: Array<string> | string = /./.test(strPrice)\n\t\t\t? strPrice.split('.')\n\t\t\t: strPrice\n\n\t\tif (splitStr[1]) {\n\t\t\tconst subStr = splitStr[1].substr(0, 4)\n\t\t\treturn `${splitStr[0]}.${subStr}`\n\t\t}\n\n\t\treturn splitStr.join('')\n\t}*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/markets/markets.ts"],"sourceRoot":""}